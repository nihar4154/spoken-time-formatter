plugins {
    id 'java'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'checkstyle'
    id 'pmd'
}

group = 'com.smaartbear'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework:spring-context:5.3.32'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
    }
}

checkstyle {
    toolVersion = '10.12.3'
    config = resources.text.fromFile("config/checkstyle/google_checks.xml")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco/html')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect { fileTree(dir: it, exclude: [
                'com/smartbear/britishtime/cli/Main.class',
                'com/smartbear/britishtime/config/AppConfig.class',
                'com/smartbear/britishtime/cli/CommandLineInterface.class'
        ]) }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect { fileTree(dir: it, exclude: [
                'com/smartbear/britishtime/cli/Main.class',
                'com/smartbear/britishtime/config/AppConfig.class',
                'com/smartbear/britishtime/cli/CommandLineInterface.class'
        ]) }))
    }
}

check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
}

pmd {
    toolVersion = '6.55.0'
    ruleSets = ["category/java/errorprone.xml"]
    ignoreFailures = false
    consoleOutput = true
}